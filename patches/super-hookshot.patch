diff --git a/soh/src/code/z_player_lib.c b/soh/src/code/z_player_lib.c
index 87a7009..e76d005 100644
--- a/soh/src/code/z_player_lib.c
+++ b/soh/src/code/z_player_lib.c
@@ -1415,7 +1415,7 @@ void func_80090D20(GlobalContext* globalCtx, s32 limbIndex, Gfx** dList, Vec3s*
                     if (func_8002DD78(this) != 0) {
                         Matrix_Translate(500.0f, 300.0f, 0.0f, MTXMODE_APPLY);
                         Player_DrawHookshotReticle(
-                            globalCtx, this, (this->heldItemActionParam == PLAYER_AP_HOOKSHOT) ? 38600.0f : 77600.0f);
+                            globalCtx, this, 60.0f * 35.0f * 150.0f);
                     }
                 }
             }
diff --git a/soh/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.c b/soh/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.c
index bda9b51..3fba9df 100644
--- a/soh/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.c
+++ b/soh/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.c
@@ -85,10 +85,10 @@ void ArmsHook_Wait(ArmsHook* this, GlobalContext* globalCtx) {
     if (this->actor.parent == NULL) {
         Player* player = GET_PLAYER(globalCtx);
         // get correct timer length for hookshot or longshot
-        s32 length = (player->heldItemActionParam == PLAYER_AP_HOOKSHOT) ? 13 : 26;
+        s32 length = (player->heldItemActionParam == PLAYER_AP_HOOKSHOT) ? 60 : 60;
 
         ArmsHook_SetupAction(this, ArmsHook_Shoot);
-        func_8002D9A4(&this->actor, 20.0f);
+        func_8002D9A4(&this->actor, 35.0f);
         this->actor.parent = &GET_PLAYER(globalCtx)->actor;
         this->timer = length;
     }
@@ -173,7 +173,7 @@ void ArmsHook_Shoot(ArmsHook* this, GlobalContext* globalCtx) {
         (this->collider.info.atHitInfo->elemType != ELEMTYPE_UNK4)) {
         touchedActor = this->collider.base.at;
         if ((touchedActor->update != NULL) && (touchedActor->flags & (ACTOR_FLAG_9 | ACTOR_FLAG_10))) {
-            if (this->collider.info.atHitInfo->bumperFlags & BUMP_HOOKABLE) {
+            if ((this->collider.info.atHitInfo->bumperFlags & BUMP_HOOKABLE) || true) {
                 ArmsHook_AttachHookToActor(this, touchedActor);
                 if (CHECK_FLAG_ALL(touchedActor->flags, ACTOR_FLAG_10)) {
                     func_80865044(this);
@@ -205,13 +205,13 @@ void ArmsHook_Shoot(ArmsHook* this, GlobalContext* globalCtx) {
             velocity = 0.0f;
             phi_f16 = 0.0f;
         } else {
-            if (this->actor.child != NULL) {
-                velocity = 30.0f;
-            } else if (grabbed != NULL) {
-                velocity = 50.0f;
-            } else {
+            // if (this->actor.child != NULL) {
+            //     velocity = 30.0f;
+            // } else if (grabbed != NULL) {
+            //     velocity = 50.0f;
+            // } else {
                 velocity = 200.0f;
-            }
+            // }
             phi_f16 = bodyDistDiff - velocity;
             if (bodyDistDiff <= velocity) {
                 phi_f16 = 0.0f;
@@ -266,7 +266,7 @@ void ArmsHook_Shoot(ArmsHook* this, GlobalContext* globalCtx) {
             this->actor.world.pos.x += 10.0f * sp5C;
             this->actor.world.pos.z += 10.0f * sp58;
             this->timer = 0;
-            if (SurfaceType_IsHookshotSurface(&globalCtx->colCtx, poly, bgId)) {
+            if (SurfaceType_IsHookshotSurface(&globalCtx->colCtx, poly, bgId) || true) {
                 if (bgId != BGCHECK_SCENE) {
                     dynaPolyActor = DynaPoly_GetActor(&globalCtx->colCtx, bgId);
                     if (dynaPolyActor != NULL) {
